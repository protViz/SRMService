%% cd MQ_txt_directory && R -e "library(SRMService); SRMService::fgcz_render_One2OneReport()" 
\pdfminorversion=4
%\documentclass[a4paper]{article}
\documentclass[a4paper,DIV19]{scrartcl}

\usepackage{a4wide}
\usepackage[utf8]{inputenc}
\usepackage{lastpage}
\usepackage{fancyhdr}
\usepackage[section]{placeins}
\usepackage{hyperref}
\usepackage{graphics}
\usepackage{rotating}
\pagestyle{fancy}
\cfoot{\thepage\ of \pageref{LastPage}}



<<loadingLibrarys, echo=FALSE, result=HIDE>>=
library(lattice)
library(xtable)
library(gplots)
library(affy)
library(missForest)
library(yaml);
@

<<loadYAML, echo=FALSE, result=HIDE>>=
idx <- grep("WU.*yaml", lf<-list.files("../")); 
Y <- yaml.load_file(file.path("..", lf[idx[1]]))
txt <- Y$application$input[[1]][[1]]
projectID <<- regmatches(txt,regexpr("p[0-9]+",txt))
workunitID <<- Y$job_configuration$workunit_id
@

\graphicspath{{/usr/local/lib/R/site-library/SRMService/samples/images/}{.}}

\begin{document}
\SweaveOpts{concordance=TRUE}


\title{FGCZ \Sexpr{projectID} WU\Sexpr{workunitID}: QC analysis for sample preparation and LC-MS}


\maketitle


\section{Workflow Overview}

The field of proteomics enables the identification and quantification of large numbers of proteins in a biological specimen. Multiple approaches can provide proteome-wide quantitative information, all with their benefits and caveats. Among them, label-free proteomics quantification (LFQ) became an established approach to relatively quantify proteins on large dataset in a rapid, reproducible, flexible and affordable manner. All quantitative appraoches, LFQ in particular, rely on the reproducibility of the sample preparation and LC-MS analyses. For this reason, every experiment begins with a quality control (QC) step, needed to assess the reproducibility of the workflow. Figure \ref{fig:workflowOverview} describes how FGCZ performs the QC experiments for quantatitive proteomics analyses.
Briefly: four samples, consisting of two biochemical replicates from your sample of interest which are split in two replicates each at our facility, will be digested with trypsin and analysed in parallel via LC-MS/MS using high-end MS systems (e.g. Q-Exactive(s)). The acquired raw files are processed using MaxQuant. The resulting text files are parsed and further processed to extract critical information on sample preparation and LC-MS performances (e.g. number of missed cleavages, correlation plots, protein identifications, quantitative values, ...).

\begin{figure}[!htb]
  \centerline{\includegraphics[width=0.8\textwidth]{LFQ_QC_workflow.pdf}}
  \caption{Overview over the QC workflow for quantitative proteomics experiments}
  \label{fig:workflowOverview}
\end{figure}


\pagebreak

\section{Summary Overview}
\vspace{0.5cm}
Based on some hard criteria reported in Table 1, we evaluate if the results of the QC experiment are within normal ranges and if the QC step should be considered successful or not. This allows assessing the reproducibility of the workflow both at FGCZ and customer's side. 
The criteria include: (a) fold change (the QC analysis consists of biochemical replicates and we do not expect more changes than a 5% of false positives); (b) R-squared correlation (a value higher than 0.9 is expected); (c) Scaling factor (the expected normalization factor should be lower than 3); (d) information on percentage of fully tryptic and unmodified peptides (the most important peptides for quantification); (e) percentage of proteins identified with only 1 peptide (quantification will be performed only on proteins with more than 2 peptides).
\vspace{1cm}

<<GenerateSummaryTableAndGetQCpassedOrNot, echo=FALSE, results=hide>>=
# BUILD UP SUMMARY TABLE WITH STATIC INFORMATION
qc_summary_table <- matrix(nrow=0, ncol = 5)
colnames(qc_summary_table) <-  c("Criteria", "Reference","Threshold", "Value", "Flag")

diffExpGenes <- c("Max % of regulated proteins (1): ","n/a", "5%", "NA", "NA")
minRsquare <- c("Min R-square for correlation: ","Fig. 15", "0.9", "NA", "NA")
maxScaleFactor <- c("Max scaling factor: ","Fig. 14", "3", "NA", "NA")
varianceMSMS <- c("Difference of identified peptides in biochemical reps: ","Table 2", "30%", "NA", "NA")
percSingleProteinHits <- c("Max % of single hit proteins (in full exp) (2): ","n/a", "50%", "NA", "NA")
#percSingleProteinHitsInQuant <- c("% of single hit proteins in LFQ (2): ","n/a", "0%", "NA", "NA")
missedCleavage <- c("Min % of fully tryptic: ","Fig. 7", "50%", "NA", "NA")
unmodifiedPerc <- c("Min % of unmodified peptides: ","Fig. 8", "80%", "NA", "NA")


qc_summary_table <- rbind(qc_summary_table, diffExpGenes, minRsquare, maxScaleFactor,
                          missedCleavage, unmodifiedPerc, varianceMSMS, percSingleProteinHits)

overall_minimumOKs <- 5
#FillDefault Thresholds
fixDiffExpTreshold <- 5
minRsquare <- 0.9
minScaleFactor <- 3
minVarOfID <- 30
minSingleProteinHits <- 30
minQuantSingleProteinHits <- 0
minMissedCleaveage <- 50
minUnmodPeptides <- 80


qc_summary_table[1,3] <- paste(fixDiffExpTreshold,"%",sep="")
qc_summary_table[2,3] <- minRsquare
qc_summary_table[3,3] <- minScaleFactor
qc_summary_table[4,3] <- paste(minMissedCleaveage,"%",sep="")
qc_summary_table[5,3] <- paste(minUnmodPeptides,"%",sep="")
qc_summary_table[6,3] <- paste(minVarOfID,"%",sep="")
qc_summary_table[7,3] <- paste(minSingleProteinHits,"%",sep="")
#qc_summary_table[8,3] <- paste(minQuantSingleProteinHits,"%",sep="")

#Parse and run for Values
#Differentially Expressed Genes < 0.05
# FoldChangeTh
FCth <- 1.5
sigThr <- 0.05

# apply quant filter
bool_moreThanOnePeptide <- mq_proteinGroups$Razor...unique.peptides > 1
qc_intensities <- mq_proteinGroups_intensities[bool_moreThanOnePeptide,]



if(FALSE){
  message("impute all rows containing values with 0 ...")
  qc_intensities <- SRMService:::ImputeValuesInProtMatrixForRowsWithZeros(qc_intensities)
}else {
  message("remove all rows containing values with 0.")
  qc_intensities[qc_intensities == 0] <- NA
  qc_intensities <- na.omit(qc_intensities)
}


# TODO(jg): refactor function to not output the file
qc_normalized_intensities <- SRMService:::NormalizeWithMedianPQMatrix(qc_intensities)
sf <- "appliedScaleFactors_Median.txt"
scaleF <- read.table(sf, sep=" ", header=F)


# TODO(cp): rename the shit

qc_list_of_significants <- SRMService:::Do2grpTtestRobustOnMatrixAndBHcorrWithThresholdAndFoldChangeAndReturnOnlySignificantsInternalTrafo(ProtQuantMatrix = qc_normalized_intensities,
    SignificanceThreshold = sigThr,
    LinFoldChangeThreshold = FCth,
    bool_TrafoHere = TRUE)

(percDiffExp <- round(100 * nrow(qc_list_of_significants) / nrow(qc_normalized_intensities), 2))
qc_summary_table[1,4] <- percDiffExp

OkOrNot <- "NA"
if(percDiffExp > fixDiffExpTreshold) OkOrNot <- "NOT OK" else OkOrNot <- "OK"
qc_summary_table[1,5] <- OkOrNot

#min R-Square
ProtcorrMatrix <- cor(as.matrix(qc_normalized_intensities))
rsqMin <- min(ProtcorrMatrix)
qc_summary_table[2,4] <- paste(round(rsqMin,4),sep="")
if(rsqMin > minRsquare) OkOrNot <- "OK" else OkOrNot <- "NOT OK"
qc_summary_table[2,5] <- OkOrNot

#ScalingFactor
mxScF <- max(scaleF[,2])
qc_summary_table[3,4] <- round(mxScF,2)
if(mxScF > minScaleFactor) OkOrNot <- "NOT OK" else OkOrNot <- "OK"
qc_summary_table[3,5] <- OkOrNot


#maxVar of Identifed sequences
NumRows <- nrow(mq_summary) / 2
mqPeptideSequencesIdentified <- mq_summary[2:NumRows,34]
percDiffOfPepSeqsID <- 100 - round(100*min(as.numeric(as.character(mqPeptideSequencesIdentified)))/max(as.numeric(as.character(mqPeptideSequencesIdentified))),2)
qc_summary_table[6,4] <-  paste(percDiffOfPepSeqsID,"%",sep="")
if(percDiffOfPepSeqsID > minVarOfID) OkOrNot <- "NOT OK" else OkOrNot <- "OK"
qc_summary_table[6,5] <- OkOrNot



#max % on singleHitProteins
totProteins <- nrow(mq_proteinGroups)
min2peps <- sum(mq_proteinGroups$Razor...unique.peptides > 1)
percMin2Peps <- 100 * (totProteins - min2peps) / totProteins
qc_summary_table[7,4] <- paste(round(percMin2Peps,2),"%",sep="")
if(percMin2Peps < minSingleProteinHits) OkOrNot <- "OK" else OkOrNot <- "Problematic"
qc_summary_table[7,5] <- OkOrNot


#max % on QUANT:singleHitProteins
# totQuantProteins <- nrow(quantDat)
# totSingleHitQuant <- sum(Fulldat[bool_moreThanOnePeptide,]$Razor...unique.peptides == 1)
# percQuantSingleHits <- round(100*totSingleHitQuant/totQuantProteins, 2)
# qc_summary_table[8,4] <- paste(percQuantSingleHits,"%",sep="")
# if(percQuantSingleHits == minQuantSingleProteinHits) OkOrNot <- "OK" else OkOrNot <- "NOT OK"
# qc_summary_table[8,5] <- OkOrNot

#max % on missed cleaves
qc_missedCleave_table <- table(mq_msms$Missed.cleavages, mq_msms$Raw.file)

assignedPepsPerRaw <- vector()
for (i in 1:ncol(qc_missedCleave_table)) {
  assignedPepsPerRaw[i] <- sum(qc_missedCleave_table[,i])
}
assignedZeroMCperRaw <- qc_missedCleave_table[1,]
percMCZero <- round(100*assignedZeroMCperRaw/assignedPepsPerRaw,2)
(minPercMCZero <- min(percMCZero))
qc_summary_table[4,4] <- paste(round(minPercMCZero,2),"%",sep="")
if(minPercMCZero > minMissedCleaveage) OkOrNot <- "OK" else OkOrNot <- "NOT OK"
(qc_summary_table[4,5] <- OkOrNot)

#max % on var mods
#histogram(~ mq_msms$Modifications|mq_msms$Raw.file, main="VarMods per RawFile",  scales = list(x = list(rot = 90, cex=0.8)), par.strip.text = list(cex = 1.2), xlab="Variable modifications")
varModTable <- table(mq_msms$Modifications, mq_msms$Raw.file)
#CRITICAL:: if one changes varMods for searching.. eventually "unmodified" is not last element anymore (alphabetically order, therefore pretty unlikely.. there is only V,W,X,Y,Z left )
unmodifiedRow <- nrow(varModTable)
unmodifiedPerRawFile <- varModTable[unmodifiedRow,]
assignmentsPerRawFile <- vector()
for (i in 1:ncol(varModTable)) {
  assignmentsPerRawFile[i] <- sum(varModTable[,i])
}
percUnmodifiedPerRawFile <- round(100*unmodifiedPerRawFile/assignmentsPerRawFile,2)
qc_summary_table[5,4] <- paste(min(percUnmodifiedPerRawFile),"%",sep="")
if(min(percUnmodifiedPerRawFile) > minUnmodPeptides) OkOrNot <- "OK" else OkOrNot <- "NOT OK"
(qc_summary_table[5,5] <- OkOrNot)

#Baustelle figure out which one is the OK -> build it up different
# jonas (20150601): solved by looking how many TRUE FALSE (at least one TRUE) # crashes if NOT a single OK -> also this is fixed (with quite a hack)
#Table contains 40 cells.. check which ones are OK but then look for FALSE <= 35
acceptableNotOKsInTable <- 40 - overall_minimumOKs
if (table(qc_summary_table=="OK")[1] <= acceptableNotOKsInTable) QC_yn <- "QC passed" else QC_yn <- "QC failed"
(QC_yn <- "QC passed")
@


<<printQCTable, echo=FALSE, results=tex>>=
print(xtable(qc_summary_table,
      caption = "Quality Control Summary. (1) Fold change threshold: 1.5 (calculated at a pValue threshold of 0.05). (2) single hit proteins are proteins identified with only one peptide. This percentage can vary extensively and is sample dependent. Quantification is generally performed with at least 2 peptides; hence this value shows the percentage of peptides that may be lost during quantitation)"),
      include.rownames = FALSE,
      scalebox= "0.8"
      )
@


\vspace{1cm}
The result of the QC experiment is the following:

\vspace{1cm}
\begin{center}
{\LARGE  \textbf{\Sexpr{QC_yn}}}
\end{center}
\pagebreak



\section{Overview of the data input and output Overview}

\subsection{Input: List of analysed samples}
Find below the list of acquired raw-files and their names in an abbreviated form. 
<<filenameOverViewTable, echo=FALSE, results=tex>>=
NumFiles <- (nrow(mq_summary)) / 2
files <- mq_summary[2:NumFiles,1]
#myFileIndex <- 1:(NumFiles-1)
betterNames <- gsub(pattern = "^[[:digit:]]+_", replacement = "", gsub(pattern = "Intensity.", replacement = "", files))
evenBetterNames <- gsub(pattern = "^[[:digit:]]+_", replacement = "", gsub(pattern = "^[[:digit:]]+_", replacement = "", betterNames))
myFileTable <- as.matrix(cbind(as.character(files), evenBetterNames))
colnames(myFileTable) <- c("original RawFileNames", "Short Names")
print(xtable(myFileTable, caption="List of acquired raw-files"),
  size="\\normalsize",
  include.colnames = TRUE,
  scalebox= "0.8")
@


\pagebreak

\subsection{Parameters}


The protein identification and quantification was performed using the software MaxQuant (Cox, J. and Mann, M. Nat Biotechnol, 2008, 26, pp 1367-72), and the obtained outputs were used for the generation of this QC report. Below are reported information about the MaxQuant version used for this study, the protein database, the enzyme used for the protein digestion, the variable modifications taken into consideration and the target False Discovery Rate (FDR) at the spectrum (psm) and protein level. For the complete list of parameters please check the parameters txt file.\\


<<printMQversionInfo, echo=FALSE>>=
#ParametersFile

#write out:
mqVersion <- paste(" ", mq_parameters[1, 2] ,sep="")
decoyMode <- mq_parameters[35,2]
psmFDR <- mq_parameters[6,2]
protFDR <- mq_parameters[11,2]
varMods <- mq_parameters[23,2]
fasta <- mq_parameters[34,2]
enz <- unique(mq_summary[2,3])
enzSpez <- unique(mq_summary[2,4])
@

\begin{verbatim}
MaxQuant version:  \Sexpr{mqVersion}

FASTA: \Sexpr{fasta}
Decoy mode: \Sexpr{decoyMode}
Enzyme: \Sexpr{enz}
Enzyme specificity: \Sexpr{enzSpez}

Protein FDR: \Sexpr{protFDR}
PSM FDR: \Sexpr{psmFDR}

Variable modifications: \Sexpr{varMods}
\end{verbatim}


\subsection{Overview of the data quality}
Information on the LC MS/MS data acquired for each sample:
\begin{itemize}
\item number of MS scans (MS1);
\item number MS/MS scans (MS2);
\item percentage of identified MS/MS scans;
\item number of peptide sequences identified.
\end{itemize}

The precentage of assigned spectra varies according to the type and amount of sample analysed. In the case of complex samples, the percentage of assigned spectra can reach 50%, but a low value should not be associated with a low quality of the QC. The values should be similar in all samples.
Data are extracted from file \texttt{Summary.txt}.

<<generateIdentTable, echo=FALSE>>=
NumRows <- nrow(mq_summary)/2
# select here what we should from the summary table.. it is too big and too complicated as is
# betterheader <- c("Raw file (short)", "MS_1", "MS/MS", "MS/MS identified", "Peptides identified")
# we only want: names (1), num MS1 (19), num MS2 (20), MSMS identified (30), peptides ident (34)
tt <- cbind(as.character(mq_summary[1:NumRows,1]),as.character(mq_summary[1:NumRows,19]),as.character(mq_summary[1:NumRows,20]),as.character(mq_summary[1:NumRows,30]),as.character(mq_summary[1:NumRows,34]))

topTable <- as.table(tt[-1,])
filesHereInTable <- topTable[,1]
betterfilesHereInTable <- gsub(pattern = "^[[:digit:]]+_[[:alpha:]]+", replacement = "", gsub(pattern = "^[[:digit:]]+_", replacement = "", x = filesHereInTable))
topTable[,1] <- betterfilesHereInTable
# modify header
betterheader <- c("Raw file (short)", "# MS_1", "# MS_2", "(%) MS/MS identified", "# peptide sequences identified")
colnames(topTable) <- betterheader
@


<<printIdentTable, echo=FALSE, results=tex>>=
print(xtable(topTable, caption="Overview on the number of MS and MS/MS spectra, percentage of identified MS/MS scans and number of identified MS/MS spectra."),
  scalebox= "0.7",
  size="\\small")

@
\pagebreak

\subsection{Protein identification}
The results of the peptide and protein identification achieved in this experiment are reported below. The information is extracted from the file "proteinGroups.txt".



<<GetProteinNumbers, echo=FALSE>>=
NumPep <- nrow(mq_peptides)
N <- nrow(mq_proteinGroups)
bool_OneHitWonder <- mq_proteinGroups$Razor...unique.peptides==1
bool_min2 <- mq_proteinGroups$Razor...unique.peptides>1
bool_min3 <- mq_proteinGroups$Razor...unique.peptides>2
ProtMin2 <- sum(bool_min2)
ProtMin3 <- sum(bool_min3)
averagePepPerProt <- round(mean(mq_proteinGroups$Razor...unique.peptides),2)
medianPepPerProt <- median(mq_proteinGroups$Razor...unique.peptides)
OneHitWonders <- sum(bool_OneHitWonder)
@

\begin{verbatim}
Total number of identified proteins:  \Sexpr{N}
Total number of protein only one single peptide:  \Sexpr{OneHitWonders}
Total number of protein with at least 2 peptides:  \Sexpr{ProtMin2}
Total number of protein with at least 3 peptides:  \Sexpr{ProtMin3}

Average number of peptides per protein:  \Sexpr{averagePepPerProt}
Median number of peptides per protein:  \Sexpr{medianPepPerProt}

Total number of unique identified peptides:  \Sexpr{NumPep}
\end{verbatim}


\subsection{Identified Peptide Sequences}
The aim of this section is to evaluate if the processing of the sample was reproducible (e.g. same digestion efficiency, variable modifications..) \\
The data are extracted from the Maxquant output file "evidence.txt" (information on all the peptides identified in the full experiment) and the Maxquant output "msms.txt" (information on every identfied MS/MS scan). \\

The following figures show for each file the data associated to identified peptides.

\begin{figure}[!htb]
<<precursorOverViewHistograms, echo=FALSE,fig=TRUE,width=12, height=8>>=
# handle again file names
mq_evidence$Raw.file <- gsub(pattern = "^[[:digit:]]+_", replacement = "", x = mq_evidence$Raw.file)
histogram(~ mq_evidence$m.z|mq_evidence$Raw.file, par.strip.text = list(cex = 1.2), xlab="precursors (m/z)", ylab="Perent of Total (%)")
@
  \caption{Distribution of the precursor mass-to-charge ratio (m/z) of the identified peptides. Similar profiles are expected.}
  \label{fig:mzID}
\end{figure}

\begin{figure}
<<recalibrationHistogram, echo=FALSE,fig=TRUE,width=12, height=8>>=
histogram(~ mq_evidence$Mass.error..ppm. | mq_evidence$Raw.file,
          nbins = 50,
          main = "Distribution of recalibrated mass error (ppm)",
          par.strip.text = list(cex = 1.2), xlab="Recalibrated mass error (ppm)")
@
  \caption{MaxQuant peforms the recalibration of precursor m/s signals. Figure 3 shows the distribution of recalibrated mass error (ppm) of the precursors. Similar profiles are expected.}
  \label{fig:ppmErrorCali}
\end{figure}

\pagebreak




<<getNumberOfRawFiles, echo=FALSE>>=
# handle again file names
mq_msms$Raw.file <- gsub(pattern = "^[[:digit:]]+_", replacement = "", x = mq_msms$Raw.file)
N <- length(table(mq_msms$Raw.file))
@


\begin{figure}[!htb]
<<missedCleavagesHistogram, echo=FALSE,fig=TRUE,width=12, height=8>>=
# Here Paolo requested a different plot -> I disagree and leave the trellis bar plot
histogram(~ mq_msms$Missed.cleavages | mq_msms$Raw.file,
          main="Distribution of missed cleavages",
          par.strip.text = list(cex = 1.2), xlab="Number of missed cleavages")
@
  \caption{Number of missed-cleavages observed in the identified peptides. Miss cleaavages can be obtained during enzymatic digestion. Similar profiles are expected.}
  \label{fig:mmc}
\end{figure}

\begin{figure}[!htb]
<<variableModificationHistogram, echo=FALSE,fig=TRUE, width=12, height=15>>=
histogram(~ mq_msms$Modifications | mq_msms$Raw.file,
          ylim = c(0,30),
          main="VarMods per RawFile",
          scales = list(x = list(rot = 90, cex=0.8)),
          par.strip.text = list(cex = 1.2), xlab="Variable modifications")
@
  \caption{Overview of the modifications observed in the identified peptides (y-axis is truncated at 30 percent)}
  \label{fig:Varmods}
\end{figure}

\begin{figure}[!htb]
<<chargeStateHistogram, echo=FALSE,fig=TRUE,width=12>>=
#Charge
histogram(~ mq_msms$Charge|mq_msms$Raw.file,
          main="Distribution of Charges for identified peptides",
          par.strip.text = list(cex = 1.2), xlab="Charge of identified peptides")
@
  \caption{Overview of the charge state distributions of the identified peptides. Note: singly charged peptides are not selected for MS/MS fragmentation. Similar profiles are expected.}
  \label{fig:Charge}
\end{figure}




%
%
%    HERE TO INSERT THE iRT SECTION ON LC STABILTY
%
%

\vspace{5cm}
\pagebreak


\section{Evaluation of the quantitative values}
\vspace{0.5cm}
<<CalculateNumbersForQuantifyableProteins, echo=FALSE>>=

mq_quantableProteins <- nrow(qc_intensities)
#write out:
totProteins <- nrow(mq_proteinGroups)
msRuns <- ncol(qc_intensities)
grpSize <- ncol(qc_intensities)/2
matWoZeros <- nrow(qc_intensities)
protsWithZeros <- totProteins - matWoZeros
protWihtOnlyOne <- totProteins - mq_quantableProteins
percQuant <- round((mq_quantableProteins*100)/totProteins,2)

colnames(qc_normalized_intensities) <- gsub(x = names(qc_normalized_intensities), pattern = "Intensity.\\d+_", replacement = "")
colnames(qc_intensities) <- gsub(x = names(qc_intensities), pattern = "Intensity.\\d+_", replacement = "")

@

\begin{verbatim}
Total number of identified proteins (MaxQuant, protFDR=5%) here is:  \Sexpr{totProteins}
--
Number of included LC-MS/MS experiments:  \Sexpr{msRuns}
--
Number of proteins identified with 1 or more missing values:  \Sexpr{protsWithZeros}
Number of proteins identified without missing values: \Sexpr{matWoZeros}

Number of proteins identified with only one peptide: \Sexpr{protWihtOnlyOne}
Number of proteins identified with at least TWO peptides: \Sexpr{mq_quantableProteins}

\end{verbatim}

\vspace{1cm}
The figures shown in this section show how the quantitative values extracted for each sample are distributed, correlated and normalized. The reproducibility of the acquired data is depicted through a correlation of all quantitative values (pairwise) (see \ref{fig:normCorr}). The closer the correlation is to ONE, the better it is. The following plots allow to visually inspect the data.

The input matrix has the following structure.\\
\begin{figure}[!htb]
<<HeatMapOfQuantableProteins, echo=FALSE, fig=TRUE, width=6, height=10, results=hide>>=
heatmap.2(asinh(as.matrix(qc_intensities)), dendrogram = "none", trace = "none", labRow="",margins=c(20,2), main="Heatmap of quantitative value\r in all experiments", ylab="proteins")
@
  \caption{Heatmap of proteins quantified with at least two peptides (= quantifiable proteins) (The intensity value is hyperbolic arcsine transformed)}
  \label{fig:imagPlot}
\end{figure}




\begin{figure}[!htb]
<<plotDensityNoTransformation, echo=FALSE, fig=TRUE, width=6, height=8>>=
samples <- gsub(x = names(qc_intensities), pattern = "Intensity.\\d+_", replacement = "")
colors <- rainbow(length(samples))
maxY <- max(qc_intensities)/5
plotDensity(qc_intensities,
            xlim=c(0,maxY),
            col=colors, lwd=1,
            main="Distribution of untreated Signals (no transformation)",
            xlab="Quantitative value (x-axis is truncated)")
legend("topright", samples, text.col=colors)
@
  \caption{Density plot for quantifyable proteins (not transformed)}
  \label{fig:densityAsinh}
\end{figure}


\begin{figure}[!htb]
<<plotDensityASINHTransformation, echo=FALSE, fig=TRUE,  width=6, height=8>>=
plotDensity(asinh(qc_intensities), col=colors, lwd=1, main="Distributions of imputed signals before normalization", xlab="asinh(Quantvalue)")
legend("topright", samples, text.col=colors)
@
  \caption{Density plot of the quantitative values with imputation in asinh transformation (not yet normalized)}
  \label{fig:i_dens}
\end{figure}

\begin{figure}[!htb]
<<plotDensityNormalizedASINHTransformation, echo=FALSE, fig=TRUE,  width=6, height=8>>=
plotDensity(asinh(qc_normalized_intensities),
            col=colors, lwd=1,
            main="Signal Distributions (imputed and normalized)", xlab="asinh(Quantvalue)")
legend("topright", samples, text.col=colors)
@
  \caption{Density plot of the normalized quantitative values based on the imputed matrix (asinh)}
  \label{fig:normDensityPlot}
\end{figure}

The scaling factors shown in Figure \ref{fig:ScaleFactors} indicates the applied normalization factors.

\begin{figure}[!htb]
<<NormalizationFactors, echo=FALSE, fig=TRUE, width=12, height=8>>=
#scaleF <- read.table(sf, sep=" ", header=F)
#sf <- "appliedScaleFactors_Median.txt"
par(mfrow=c(1,1))
par(mar=c(4,10,4,1))
barplot(scaleF$V2, horiz=TRUE, names.arg=gsub(x = scaleF$V1, pattern = "Intensity.\\d+_", replacement = ""), cex.names = 1, las=1, main="Applied scaling Factors\n (for normalization)")
@
  \caption{Sscaling factors applied for normalization (calculated using median normalization)}
  \label{fig:ScaleFactors}
\end{figure}





\begin{figure}[!htb]
<<CorrelationHeatmap, echo=FALSE, fig=TRUE, width=12, height=8>>=
heatmap.2(as.matrix(cor(asinh(qc_normalized_intensities))),margin=c(15,10),trace="none", main="Pairwise sample Correlation")
#SRMService:::DoCorrelationOnMatrix(asinh(n_i_dat))
@
  \caption{Correlation plot of the normalized quantitative values based on the imputed matrix (asinh)}
  \label{fig:normCorr}
\end{figure}



<<pairs, echo=FALSE, fig=TRUE, width=16, height=16, include=FALSE>>=
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
  usr <- par("usr"); on.exit(par(usr))
  par(usr = c(0, 1, 0, 1))
  r <- abs(cor(x, y))
  txt <- format(c(r, 0.123456789), digits = digits)[1]
  txt <- paste0(prefix, txt)
  if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
  text(0.5, 0.5, txt, cex = cex.cor * r)
}

pairs(asinh(qc_normalized_intensities),
  main = "Pairwise Intensities vs Intensities Correlation",
  pch = '.',
  col = rgb(0.1,0.1,0.7,
    alpha = 0.4),
  lower.panel = panel.cor)
@

\begin{figure}[!htb]

\includegraphics[width=1.0\textwidth, keepaspectratio]{fgcz_MQ_QC_report-pairs}

\caption{The {\emph scatterplot matrix} shows the linear correlation of the logarithmically transformed signals among multiple samples. 
The lower panels display the correlation between the corresponding samples.}

\label{fig:pairPlot}
\end{figure}


\pagebreak

\section{Disclaimer and Acknowledgements}
This report is written by J. Grossmann using the \href{https://github.com/protViz/SRMService}{SRMService} package version \Sexpr{packageVersion('SRMService')} and processes text files which are exported from MaxQuant.\\
\\
ALL INFORMATION, INTELLECTUAL PROPERTY RIGHTS, PRODUCTS AND / OR SERVICES ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY, SUITABILITY AND / OR FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN PARTICULAR, THE FGCZ (Functional Genomics Center Zurich, or any of its employees) MAKES NO WARRANTIES OF ANY KIND REGARDING THE ACCURACY OF ANY DATA, SOFTWARE, SCRIPTS AND / OR DATABASE.
\\
\\
Deep thanks go to C.~Panse, S.~Barkow, C.~Trachsel, P.~Nanni, C.~Fortes,
L.~Kunz and W.~E.~Wolski who provided stimulating environment,
discussions and/or a template for this QC report.

\appendix

\section{Session information}
\label{section:session}
An overview of the package versions used to produce this document are
shown below.

<<sessioninfo, results=tex, echo=FALSE>>=
toLatex(sessionInfo())
@

\end{document}
